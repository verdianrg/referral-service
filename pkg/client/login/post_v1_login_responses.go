// Code generated by go-swagger; DO NOT EDIT.

package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"referralservice/gen/models"
)

// PostV1LoginReader is a Reader for the PostV1Login structure.
type PostV1LoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1LoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1LoginCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostV1LoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostV1LoginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostV1LoginCreated creates a PostV1LoginCreated with default headers values
func NewPostV1LoginCreated() *PostV1LoginCreated {
	return &PostV1LoginCreated{}
}

/*
PostV1LoginCreated describes a response with status code 201, with default header values.

login success
*/
type PostV1LoginCreated struct {
	Payload *models.LoginResponse
}

// IsSuccess returns true when this post v1 login created response has a 2xx status code
func (o *PostV1LoginCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 login created response has a 3xx status code
func (o *PostV1LoginCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 login created response has a 4xx status code
func (o *PostV1LoginCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 login created response has a 5xx status code
func (o *PostV1LoginCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 login created response a status code equal to that given
func (o *PostV1LoginCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 login created response
func (o *PostV1LoginCreated) Code() int {
	return 201
}

func (o *PostV1LoginCreated) Error() string {
	return fmt.Sprintf("[POST /v1/login][%d] postV1LoginCreated  %+v", 201, o.Payload)
}

func (o *PostV1LoginCreated) String() string {
	return fmt.Sprintf("[POST /v1/login][%d] postV1LoginCreated  %+v", 201, o.Payload)
}

func (o *PostV1LoginCreated) GetPayload() *models.LoginResponse {
	return o.Payload
}

func (o *PostV1LoginCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1LoginUnauthorized creates a PostV1LoginUnauthorized with default headers values
func NewPostV1LoginUnauthorized() *PostV1LoginUnauthorized {
	return &PostV1LoginUnauthorized{}
}

/*
PostV1LoginUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type PostV1LoginUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this post v1 login unauthorized response has a 2xx status code
func (o *PostV1LoginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 login unauthorized response has a 3xx status code
func (o *PostV1LoginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 login unauthorized response has a 4xx status code
func (o *PostV1LoginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 login unauthorized response has a 5xx status code
func (o *PostV1LoginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 login unauthorized response a status code equal to that given
func (o *PostV1LoginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 login unauthorized response
func (o *PostV1LoginUnauthorized) Code() int {
	return 401
}

func (o *PostV1LoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/login][%d] postV1LoginUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1LoginUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/login][%d] postV1LoginUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1LoginUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *PostV1LoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1LoginDefault creates a PostV1LoginDefault with default headers values
func NewPostV1LoginDefault(code int) *PostV1LoginDefault {
	return &PostV1LoginDefault{
		_statusCode: code,
	}
}

/*
PostV1LoginDefault describes a response with status code -1, with default header values.

error
*/
type PostV1LoginDefault struct {
	_statusCode int

	Payload *models.BaseResponse
}

// IsSuccess returns true when this post v1 login default response has a 2xx status code
func (o *PostV1LoginDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post v1 login default response has a 3xx status code
func (o *PostV1LoginDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post v1 login default response has a 4xx status code
func (o *PostV1LoginDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post v1 login default response has a 5xx status code
func (o *PostV1LoginDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post v1 login default response a status code equal to that given
func (o *PostV1LoginDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post v1 login default response
func (o *PostV1LoginDefault) Code() int {
	return o._statusCode
}

func (o *PostV1LoginDefault) Error() string {
	return fmt.Sprintf("[POST /v1/login][%d] PostV1Login default  %+v", o._statusCode, o.Payload)
}

func (o *PostV1LoginDefault) String() string {
	return fmt.Sprintf("[POST /v1/login][%d] PostV1Login default  %+v", o._statusCode, o.Payload)
}

func (o *PostV1LoginDefault) GetPayload() *models.BaseResponse {
	return o.Payload
}

func (o *PostV1LoginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
