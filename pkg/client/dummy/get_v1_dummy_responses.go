// Code generated by go-swagger; DO NOT EDIT.

package dummy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"referralservice/gen/models"
)

// GetV1DummyReader is a Reader for the GetV1Dummy structure.
type GetV1DummyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1DummyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1DummyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetV1DummyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetV1DummyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetV1DummyOK creates a GetV1DummyOK with default headers values
func NewGetV1DummyOK() *GetV1DummyOK {
	return &GetV1DummyOK{}
}

/*
GetV1DummyOK describes a response with status code 200, with default header values.

dummy success
*/
type GetV1DummyOK struct {
	Payload *models.BaseResponse
}

// IsSuccess returns true when this get v1 dummy o k response has a 2xx status code
func (o *GetV1DummyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 dummy o k response has a 3xx status code
func (o *GetV1DummyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 dummy o k response has a 4xx status code
func (o *GetV1DummyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 dummy o k response has a 5xx status code
func (o *GetV1DummyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 dummy o k response a status code equal to that given
func (o *GetV1DummyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 dummy o k response
func (o *GetV1DummyOK) Code() int {
	return 200
}

func (o *GetV1DummyOK) Error() string {
	return fmt.Sprintf("[GET /v1/dummy][%d] getV1DummyOK  %+v", 200, o.Payload)
}

func (o *GetV1DummyOK) String() string {
	return fmt.Sprintf("[GET /v1/dummy][%d] getV1DummyOK  %+v", 200, o.Payload)
}

func (o *GetV1DummyOK) GetPayload() *models.BaseResponse {
	return o.Payload
}

func (o *GetV1DummyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1DummyUnauthorized creates a GetV1DummyUnauthorized with default headers values
func NewGetV1DummyUnauthorized() *GetV1DummyUnauthorized {
	return &GetV1DummyUnauthorized{}
}

/*
GetV1DummyUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type GetV1DummyUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this get v1 dummy unauthorized response has a 2xx status code
func (o *GetV1DummyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 dummy unauthorized response has a 3xx status code
func (o *GetV1DummyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 dummy unauthorized response has a 4xx status code
func (o *GetV1DummyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 dummy unauthorized response has a 5xx status code
func (o *GetV1DummyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 dummy unauthorized response a status code equal to that given
func (o *GetV1DummyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 dummy unauthorized response
func (o *GetV1DummyUnauthorized) Code() int {
	return 401
}

func (o *GetV1DummyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/dummy][%d] getV1DummyUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1DummyUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/dummy][%d] getV1DummyUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1DummyUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetV1DummyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1DummyDefault creates a GetV1DummyDefault with default headers values
func NewGetV1DummyDefault(code int) *GetV1DummyDefault {
	return &GetV1DummyDefault{
		_statusCode: code,
	}
}

/*
GetV1DummyDefault describes a response with status code -1, with default header values.

error
*/
type GetV1DummyDefault struct {
	_statusCode int

	Payload *models.BaseResponse
}

// IsSuccess returns true when this get v1 dummy default response has a 2xx status code
func (o *GetV1DummyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get v1 dummy default response has a 3xx status code
func (o *GetV1DummyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get v1 dummy default response has a 4xx status code
func (o *GetV1DummyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get v1 dummy default response has a 5xx status code
func (o *GetV1DummyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get v1 dummy default response a status code equal to that given
func (o *GetV1DummyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get v1 dummy default response
func (o *GetV1DummyDefault) Code() int {
	return o._statusCode
}

func (o *GetV1DummyDefault) Error() string {
	return fmt.Sprintf("[GET /v1/dummy][%d] GetV1Dummy default  %+v", o._statusCode, o.Payload)
}

func (o *GetV1DummyDefault) String() string {
	return fmt.Sprintf("[GET /v1/dummy][%d] GetV1Dummy default  %+v", o._statusCode, o.Payload)
}

func (o *GetV1DummyDefault) GetPayload() *models.BaseResponse {
	return o.Payload
}

func (o *GetV1DummyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
