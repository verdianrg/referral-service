// Code generated by go-swagger; DO NOT EDIT.

package unique

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"referralservice/gen/models"
)

// GetUniqueLinkEmailReader is a Reader for the GetUniqueLinkEmail structure.
type GetUniqueLinkEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniqueLinkEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUniqueLinkEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUniqueLinkEmailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetUniqueLinkEmailDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetUniqueLinkEmailOK creates a GetUniqueLinkEmailOK with default headers values
func NewGetUniqueLinkEmailOK() *GetUniqueLinkEmailOK {
	return &GetUniqueLinkEmailOK{}
}

/*
GetUniqueLinkEmailOK describes a response with status code 200, with default header values.

success claim unique link
*/
type GetUniqueLinkEmailOK struct {
	Payload *models.BaseResponse
}

// IsSuccess returns true when this get unique link email o k response has a 2xx status code
func (o *GetUniqueLinkEmailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get unique link email o k response has a 3xx status code
func (o *GetUniqueLinkEmailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unique link email o k response has a 4xx status code
func (o *GetUniqueLinkEmailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unique link email o k response has a 5xx status code
func (o *GetUniqueLinkEmailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get unique link email o k response a status code equal to that given
func (o *GetUniqueLinkEmailOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get unique link email o k response
func (o *GetUniqueLinkEmailOK) Code() int {
	return 200
}

func (o *GetUniqueLinkEmailOK) Error() string {
	return fmt.Sprintf("[GET /uniqueLink/{email}][%d] getUniqueLinkEmailOK  %+v", 200, o.Payload)
}

func (o *GetUniqueLinkEmailOK) String() string {
	return fmt.Sprintf("[GET /uniqueLink/{email}][%d] getUniqueLinkEmailOK  %+v", 200, o.Payload)
}

func (o *GetUniqueLinkEmailOK) GetPayload() *models.BaseResponse {
	return o.Payload
}

func (o *GetUniqueLinkEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniqueLinkEmailUnauthorized creates a GetUniqueLinkEmailUnauthorized with default headers values
func NewGetUniqueLinkEmailUnauthorized() *GetUniqueLinkEmailUnauthorized {
	return &GetUniqueLinkEmailUnauthorized{}
}

/*
GetUniqueLinkEmailUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type GetUniqueLinkEmailUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this get unique link email unauthorized response has a 2xx status code
func (o *GetUniqueLinkEmailUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unique link email unauthorized response has a 3xx status code
func (o *GetUniqueLinkEmailUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unique link email unauthorized response has a 4xx status code
func (o *GetUniqueLinkEmailUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unique link email unauthorized response has a 5xx status code
func (o *GetUniqueLinkEmailUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get unique link email unauthorized response a status code equal to that given
func (o *GetUniqueLinkEmailUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get unique link email unauthorized response
func (o *GetUniqueLinkEmailUnauthorized) Code() int {
	return 401
}

func (o *GetUniqueLinkEmailUnauthorized) Error() string {
	return fmt.Sprintf("[GET /uniqueLink/{email}][%d] getUniqueLinkEmailUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUniqueLinkEmailUnauthorized) String() string {
	return fmt.Sprintf("[GET /uniqueLink/{email}][%d] getUniqueLinkEmailUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUniqueLinkEmailUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetUniqueLinkEmailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniqueLinkEmailDefault creates a GetUniqueLinkEmailDefault with default headers values
func NewGetUniqueLinkEmailDefault(code int) *GetUniqueLinkEmailDefault {
	return &GetUniqueLinkEmailDefault{
		_statusCode: code,
	}
}

/*
GetUniqueLinkEmailDefault describes a response with status code -1, with default header values.

error
*/
type GetUniqueLinkEmailDefault struct {
	_statusCode int

	Payload *models.BaseResponse
}

// IsSuccess returns true when this get unique link email default response has a 2xx status code
func (o *GetUniqueLinkEmailDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get unique link email default response has a 3xx status code
func (o *GetUniqueLinkEmailDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get unique link email default response has a 4xx status code
func (o *GetUniqueLinkEmailDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get unique link email default response has a 5xx status code
func (o *GetUniqueLinkEmailDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get unique link email default response a status code equal to that given
func (o *GetUniqueLinkEmailDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get unique link email default response
func (o *GetUniqueLinkEmailDefault) Code() int {
	return o._statusCode
}

func (o *GetUniqueLinkEmailDefault) Error() string {
	return fmt.Sprintf("[GET /uniqueLink/{email}][%d] GetUniqueLinkEmail default  %+v", o._statusCode, o.Payload)
}

func (o *GetUniqueLinkEmailDefault) String() string {
	return fmt.Sprintf("[GET /uniqueLink/{email}][%d] GetUniqueLinkEmail default  %+v", o._statusCode, o.Payload)
}

func (o *GetUniqueLinkEmailDefault) GetPayload() *models.BaseResponse {
	return o.Payload
}

func (o *GetUniqueLinkEmailDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
